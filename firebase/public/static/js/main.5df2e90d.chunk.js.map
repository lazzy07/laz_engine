{"version":3,"sources":["firebase/index.js","firebase/config.js","screens/CurrentMatch.js","screens/Matches.js","screens/Players.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","CurrentMatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","collection","doc","onSnapshot","snapShot","setState","data","renderOver","currentOver","colors","balls","map","ele","index","react_default","a","createElement","key","style","padding","margin","backgroundColor","color01","color","fontColor","fontWeight","fontSize","borderRadius","runs","state","_this$state$data","score","overs","wickets","battingTeam","bowlingTeam","thisOver","bowler","batsmen","batsmenData","batsman","color02","console","log","batsmen1","length","className","textAlign","width","teamName","toUpperCase","display","justifyContent","alignItems","height","lib","s","flashing","size","Component","Matches","matches","forEach","push","objectSpread","_id","id","renderMatches","textClassName","title","match","actions","withRouter","Players","players","renderPlayers","fName","lName","App","brand","left","onClick","history","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5df2e90d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { config } from \"./config\";\r\n\r\nfirebase.initializeApp(config);\r\nlet firestore = firebase.firestore();\r\n\r\n// firestore.settings({\r\n//   timestampsInSnapshots: true\r\n// });\r\n\r\nexport { firestore };\r\n","// Initialize Firebase\r\nexport const config = {\r\n  apiKey: \"AIzaSyCq6jfG_FOyaUVp-Sh_e6sa5n3W2L_0Ng8\",\r\n  authDomain: \"antiraggers17.firebaseapp.com\",\r\n  databaseURL: \"https://antiraggers17.firebaseio.com\",\r\n  projectId: \"antiraggers17\",\r\n  storageBucket: \"antiraggers17.appspot.com\",\r\n  messagingSenderId: \"1016788822775\"\r\n};\r\n","import React, { Component } from 'react'\r\nimport {Col, Row, Preloader} from \"react-materialize\"\r\nimport { firestore } from '../firebase';\r\nimport { getRealData } from '../functions';\r\nexport default class CurrentMatch extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       data: null\r\n    }\r\n  }\r\n  componentWillMount = () => {\r\n    firestore.collection(\"users\").doc(\"antiraggers15\").collection(\"data\").doc(\"currentMatch\").onSnapshot(snapShot => {\r\n      this.setState({\r\n        data: snapShot.data()\r\n      })\r\n    })\r\n  };\r\n\r\n  renderOver = (currentOver, colors) => {\r\n    return currentOver.balls.map((ele, index) => {\r\n      return (\r\n        <span\r\n          key={index}\r\n          style={{\r\n            padding: \"10px\",\r\n            margin: \"10px\",\r\n            backgroundColor: colors.color01,\r\n            color: colors.fontColor,\r\n            fontWeight: \"bolder\",\r\n            fontSize: \"50px\",\r\n            borderRadius: \"5px 20px 5px\"\r\n          }}\r\n        >\r\n          {ele.runs}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    if(this.state.data){\r\n      let {data, colors} = this.state.data;\r\n      let state = data.data;\r\n\r\n      let {\r\n        score,\r\n        overs,\r\n        wickets,\r\n        battingTeam,\r\n        bowlingTeam,\r\n        bowler,\r\n        thisOver,\r\n        batsmen,\r\n        batsman,\r\n        batsmenData\r\n      } = state;\r\n      let {\r\n        color01, color02, fontColor\r\n      } = colors;\r\n\r\n      console.log(batsmenData);\r\n      let batsmen1 = {\r\n        score: 0,\r\n        balls: 0\r\n      }\r\n\r\n      let batsmen2 = {\r\n        score: 0,\r\n        balls: 0\r\n      }\r\n      if(batsmen.length > 0){\r\n        if(batsmen[0]){\r\n          if(batsmenData.score[batsmen[0]]){\r\n            batsmen1.score = batsmenData.score[batsmen[0]]\r\n          }\r\n          if(batsmenData.balls[batsmen[0]]){\r\n            batsmen1.balls = batsmenData.balls[batsmen[0]]\r\n          }\r\n        }\r\n      }\r\n      if(batsmen.length > 0){\r\n        if(batsmen[1]){\r\n          if(batsmenData.score[batsmen[1]]){\r\n            batsmen1.score = batsmenData.score[batsmen[1]]\r\n          }\r\n          if(batsmenData.balls[batsmen[0]]){\r\n            batsmen1.balls = batsmenData.balls[batsmen[1]]\r\n          }\r\n        }\r\n      }\r\n      \r\n      return (<div>\r\n        <div className=\"row\">\r\n          <div style={{textAlign: \"center\", width: \"100%\", color: fontColor, backgroundColor: color01, padding: \"30px\"}}>\r\n            <h3>{battingTeam.teamName.toUpperCase() + \" vs \" + bowlingTeam.teamName.toUpperCase()}</h3>\r\n            <h5 style={{ padding: \"0px\", fontWeight: \"bolder\" }}>\r\n              {battingTeam.teamName.toUpperCase() + \" batting\"}\r\n            </h5>\r\n            <h1>{score} / {wickets} <span style={{fontSize: \"35px\"}}>({overs})</span></h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div style={{textAlign: \"center\"}}>\r\n            <h4>This Over</h4>\r\n            {this.renderOver(thisOver, colors)}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"row\">\r\n        <div className=\"col offset-s2 s4\">\r\n            <h6>Bowler</h6>\r\n            <h4>\r\n              {bowler\r\n                ? getRealData(\"_id\", bowler, bowlingTeam.players).fName || null +\r\n                  \" \" +\r\n                  getRealData(\"_id\", bowler, bowlingTeam.players).lName\r\n                : null}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col offset-s2 s4\">\r\n            <h6>Batting</h6>\r\n            <h5 styl={{ fontWeight: \"bolder\" }}>\r\n              {batsmen\r\n                ? getRealData(\"_id\", batsmen[0], battingTeam.players).fName +\r\n                  \" \" +\r\n                  getRealData(\"_id\", batsmen[0], battingTeam.players).lName //+ \" \"+ batsmen1.score + \"(\" + batsmen1.balls +\")\"\r\n                : null}\r\n              {batsman === batsmen[0] ? \"*\" : \"\"}\r\n            </h5>\r\n            <h5>\r\n              {batsmen\r\n                ? getRealData(\"_id\", batsmen[1], battingTeam.players).fName +\r\n                  \" \" +\r\n                  getRealData(\"_id\", batsmen[1], battingTeam.players).lName //+ \" \"+ batsmen2.score + \"(\" + batsmen2.balls +\")\"\r\n                : null}\r\n              {batsman === batsmen[1] ? \"*\" : \"\"}\r\n            </h5>\r\n          </div>\r\n          \r\n        </div> */}\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", width: \"100%\"}}>\r\n          <Row>\r\n          <Col s={4}>\r\n            <Preloader flashing size='big'/>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {firestore} from \"../firebase\"\r\nimport {Card} from \"react-materialize\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass Matches extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       matches: []\r\n    }\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(\"antiraggers15\").collection(\"matches\").onSnapshot(snapShot => {\r\n        var matches = [];\r\n        snapShot.forEach(doc => {\r\n          matches.push({...doc.data(), _id: doc.id})\r\n        })\r\n        this.setState({\r\n          matches\r\n        })\r\n      })\r\n  };\r\n\r\n  renderMatches = matches => {\r\n    return matches.map((ele, index) => {\r\n      return (\r\n      <div key={index} className=\"col s12 m4\">\r\n        <Card className='teal' textClassName='white-text' title={ele.match} actions={[<span>Get Info</span>]}>\r\n          {\"Get more info\"}\r\n        </Card>\r\n      </div>)\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <h3>Matches</h3>\r\n        <div className=\"row\">\r\n          {this.renderMatches(this.state.matches)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Matches)","import React, { Component } from 'react'\r\nimport {firestore} from \"../firebase\"\r\nimport {Card} from \"react-materialize\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass Players extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       players: []\r\n    }\r\n  }\r\n  componentWillMount = () => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(\"antiraggers15\").collection(\"players\").onSnapshot(snapShot => {\r\n        var players = [];\r\n        snapShot.forEach(doc => {\r\n          players.push(doc.data())\r\n        })\r\n        this.setState({\r\n          players\r\n        })\r\n      })\r\n  };\r\n\r\n  renderPlayers = players => {\r\n    return players.map((ele, index) => {\r\n      return (\r\n      <div key={index} className=\"col s12 m4\">\r\n        <Card className='teal' textClassName='white-text' title={ele.fName + \" \" + ele.lName} actions={[<span>Get Info</span>]}>\r\n          {\"Get more info\"}\r\n        </Card>\r\n      </div>)\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <h3>Players</h3>\r\n        <div className=\"row\">\r\n          {this.renderPlayers(this.state.players)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Players)","import React, { Component } from 'react';\nimport {Navbar, NavItem} from \"react-materialize\"\nimport { Route, Switch } from \"react-router-dom\";\nimport CurrentMatch from './screens/CurrentMatch';\nimport {withRouter} from \"react-router-dom\"\nimport Matches from './screens/Matches';\nimport Players from './screens/Players';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar className=\"teal\" brand=\"Pera 6s 2k19\" left>\n          <NavItem onClick={() => this.props.history.push(\"/\")}>Home</NavItem>\n          <NavItem onClick={() => this.props.history.push(\"/matches\")}>Matches</NavItem>\n          <NavItem onClick={() => this.props.history.push(\"/players\")}>Players</NavItem>\n        </Navbar>\n        <Switch>\n          <Route exact path={\"/\"} component={CurrentMatch}/>\n          <Route exact path={\"/matches\"} component={Matches}/>\n          <Route exact path={\"/players\"} component={Players}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n  </BrowserRouter>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}